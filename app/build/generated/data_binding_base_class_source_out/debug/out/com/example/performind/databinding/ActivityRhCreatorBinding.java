// Generated by view binder compiler. Do not edit!
package com.example.performind.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.performind.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRhCreatorBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnCancelar;

  @NonNull
  public final Button btnSalvar;

  @NonNull
  public final TextInputEditText etCargo;

  @NonNull
  public final TextInputEditText etContato;

  @NonNull
  public final TextInputEditText etCpf;

  @NonNull
  public final TextInputEditText etMatricula;

  @NonNull
  public final TextInputEditText etNome;

  @NonNull
  public final TextInputEditText etSetor;

  @NonNull
  public final TextInputEditText etSupervisor;

  @NonNull
  public final Spinner spTipo;

  @NonNull
  public final TextInputLayout tilSetor;

  @NonNull
  public final TextInputLayout tilSupervisor;

  private ActivityRhCreatorBinding(@NonNull ScrollView rootView, @NonNull Button btnCancelar,
      @NonNull Button btnSalvar, @NonNull TextInputEditText etCargo,
      @NonNull TextInputEditText etContato, @NonNull TextInputEditText etCpf,
      @NonNull TextInputEditText etMatricula, @NonNull TextInputEditText etNome,
      @NonNull TextInputEditText etSetor, @NonNull TextInputEditText etSupervisor,
      @NonNull Spinner spTipo, @NonNull TextInputLayout tilSetor,
      @NonNull TextInputLayout tilSupervisor) {
    this.rootView = rootView;
    this.btnCancelar = btnCancelar;
    this.btnSalvar = btnSalvar;
    this.etCargo = etCargo;
    this.etContato = etContato;
    this.etCpf = etCpf;
    this.etMatricula = etMatricula;
    this.etNome = etNome;
    this.etSetor = etSetor;
    this.etSupervisor = etSupervisor;
    this.spTipo = spTipo;
    this.tilSetor = tilSetor;
    this.tilSupervisor = tilSupervisor;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRhCreatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRhCreatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_rh_creator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRhCreatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancelar;
      Button btnCancelar = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelar == null) {
        break missingId;
      }

      id = R.id.btnSalvar;
      Button btnSalvar = ViewBindings.findChildViewById(rootView, id);
      if (btnSalvar == null) {
        break missingId;
      }

      id = R.id.etCargo;
      TextInputEditText etCargo = ViewBindings.findChildViewById(rootView, id);
      if (etCargo == null) {
        break missingId;
      }

      id = R.id.etContato;
      TextInputEditText etContato = ViewBindings.findChildViewById(rootView, id);
      if (etContato == null) {
        break missingId;
      }

      id = R.id.etCpf;
      TextInputEditText etCpf = ViewBindings.findChildViewById(rootView, id);
      if (etCpf == null) {
        break missingId;
      }

      id = R.id.etMatricula;
      TextInputEditText etMatricula = ViewBindings.findChildViewById(rootView, id);
      if (etMatricula == null) {
        break missingId;
      }

      id = R.id.etNome;
      TextInputEditText etNome = ViewBindings.findChildViewById(rootView, id);
      if (etNome == null) {
        break missingId;
      }

      id = R.id.etSetor;
      TextInputEditText etSetor = ViewBindings.findChildViewById(rootView, id);
      if (etSetor == null) {
        break missingId;
      }

      id = R.id.etSupervisor;
      TextInputEditText etSupervisor = ViewBindings.findChildViewById(rootView, id);
      if (etSupervisor == null) {
        break missingId;
      }

      id = R.id.spTipo;
      Spinner spTipo = ViewBindings.findChildViewById(rootView, id);
      if (spTipo == null) {
        break missingId;
      }

      id = R.id.tilSetor;
      TextInputLayout tilSetor = ViewBindings.findChildViewById(rootView, id);
      if (tilSetor == null) {
        break missingId;
      }

      id = R.id.tilSupervisor;
      TextInputLayout tilSupervisor = ViewBindings.findChildViewById(rootView, id);
      if (tilSupervisor == null) {
        break missingId;
      }

      return new ActivityRhCreatorBinding((ScrollView) rootView, btnCancelar, btnSalvar, etCargo,
          etContato, etCpf, etMatricula, etNome, etSetor, etSupervisor, spTipo, tilSetor,
          tilSupervisor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
